{"name": "更换手机号码", "status": "broken", "statusDetails": {"message": "TypeError: option values must be strings", "trace": "self = <test_1change_number.TestCaseschange_number object at 0x0000021D7D599648>\nparam = None\n\n    def test_start(self, param: Dict = None) -> \"HttpRunner\":\n        \"\"\"main entrance, discovered by pytest\"\"\"\n        self.__init_tests__()\n        self.__project_meta = self.__project_meta or load_project_meta(\n            self.__config.path\n        )\n        self.__case_id = self.__case_id or str(uuid.uuid4())\n        self.__log_path = self.__log_path or os.path.join(\n            self.__project_meta.RootDir, \"logs\", f\"{self.__case_id}.run.log\"\n        )\n        log_handler = logger.add(self.__log_path, level=\"DEBUG\")\n    \n        # parse config name\n        config_variables = self.__config.variables\n        if param:\n            config_variables.update(param)\n        config_variables.update(self.__session_variables)\n        self.__config.name = parse_data(\n            self.__config.name, config_variables, self.__project_meta.functions\n        )\n    \n        if USE_ALLURE:\n            # update allure report meta\n            allure.dynamic.title(self.__config.name)\n            allure.dynamic.description(f\"TestCase ID: {self.__case_id}\")\n    \n        logger.info(\n            f\"Start to run testcase: {self.__config.name}, TestCase ID: {self.__case_id}\"\n        )\n    \n        try:\n            return self.run_testcase(\n>               TestCase(config=self.__config, teststeps=self.__teststeps)\n            )\n\nE:\\phython\\lib\\site-packages\\httprunner\\runner.py:456: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nE:\\phython\\lib\\site-packages\\httprunner\\runner.py:357: in run_testcase\n    extract_mapping = self.__run_step(step)\nE:\\phython\\lib\\site-packages\\httprunner\\runner.py:297: in __run_step\n    step_data = self.__run_step_testcase(step)\nE:\\phython\\lib\\site-packages\\httprunner\\runner.py:278: in __run_step_testcase\n    self.__call_hooks(step.teardown_hooks, step.variables, \"teardown testcase\")\nE:\\phython\\lib\\site-packages\\httprunner\\runner.py:122: in __call_hooks\n    parse_data(hook, step_variables, self.__project_meta.functions)\nE:\\phython\\lib\\site-packages\\httprunner\\parser.py:405: in parse_data\n    return parse_string(raw_data, variables_mapping, functions_mapping)\nE:\\phython\\lib\\site-packages\\httprunner\\parser.py:340: in parse_string\n    func_eval_value = func(*parsed_args, **parsed_kwargs)\ndebugtalk.py:284: in write_Register_mobile\n    config.set(\"test_data\", \"Register_mobile\",mobile)\nE:\\phython\\lib\\configparser.py:1197: in set\n    self._validate_value_types(option=option, value=value)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <configparser.ConfigParser object at 0x0000021D7D5FD808>\n\n    def _validate_value_types(self, *, section=\"\", option=\"\", value=\"\"):\n        \"\"\"Raises a TypeError for non-string values.\n    \n        The only legal non-string value if we allow valueless\n        options is None, so we need to check if the value is a\n        string if:\n        - we do not allow valueless options, or\n        - we allow valueless options but the value is not None\n    \n        For compatibility reasons this method is not used in classic set()\n        for RawConfigParsers. It is invoked in every case for mapping protocol\n        access and in ConfigParser.set().\n        \"\"\"\n        if not isinstance(section, str):\n            raise TypeError(\"section names must be strings\")\n        if not isinstance(option, str):\n            raise TypeError(\"option keys must be strings\")\n        if not self._allow_no_value or value:\n            if not isinstance(value, str):\n>               raise TypeError(\"option values must be strings\")\nE               TypeError: option values must be strings\n\nE:\\phython\\lib\\configparser.py:1182: TypeError"}, "description": "TestCase ID: 7a46fb8d-196e-4447-bb6f-2ba75d36cec6", "steps": [{"name": "step: APP手机号注册-获取注册登录的token和手机号", "status": "broken", "statusDetails": {"message": "TypeError: option values must be strings\n", "trace": "  File \"E:\\phython\\lib\\site-packages\\httprunner\\runner.py\", line 357, in run_testcase\n    extract_mapping = self.__run_step(step)\n  File \"E:\\phython\\lib\\site-packages\\httprunner\\runner.py\", line 297, in __run_step\n    step_data = self.__run_step_testcase(step)\n  File \"E:\\phython\\lib\\site-packages\\httprunner\\runner.py\", line 278, in __run_step_testcase\n    self.__call_hooks(step.teardown_hooks, step.variables, \"teardown testcase\")\n  File \"E:\\phython\\lib\\site-packages\\httprunner\\runner.py\", line 122, in __call_hooks\n    parse_data(hook, step_variables, self.__project_meta.functions)\n  File \"E:\\phython\\lib\\site-packages\\httprunner\\parser.py\", line 405, in parse_data\n    return parse_string(raw_data, variables_mapping, functions_mapping)\n  File \"E:\\phython\\lib\\site-packages\\httprunner\\parser.py\", line 340, in parse_string\n    func_eval_value = func(*parsed_args, **parsed_kwargs)\n  File \"C:\\Users\\46546\\Desktop\\er_loupractice\\debugtalk.py\", line 284, in write_Register_mobile\n    config.set(\"test_data\", \"Register_mobile\",mobile)\n  File \"E:\\phython\\lib\\configparser.py\", line 1197, in set\n    self._validate_value_types(option=option, value=value)\n  File \"E:\\phython\\lib\\configparser.py\", line 1182, in _validate_value_types\n    raise TypeError(\"option values must be strings\")\n"}, "steps": [{"name": "step: 注册", "status": "passed", "start": 1651904007841, "stop": 1651904007974}], "start": 1651904007840, "stop": 1651904007988}], "attachments": [{"name": "log", "source": "58b7b709-6a4f-4b5d-9f5b-4b95df63799b-attachment.txt", "type": "text/plain"}], "start": 1651904007752, "stop": 1651904007989, "uuid": "330c3e08-d5b9-46f4-a986-36b5364becda", "historyId": "4de1efbe28728f9067aaaab7da44b6cd", "testCaseId": "083d0a14d572b325c16b639d0b6b044d", "fullName": "testcases.7.191.test_1change_number.TestCaseschange_number#test_start", "labels": [{"name": "parentSuite", "value": "testcases.7.191"}, {"name": "suite", "value": "test_1change_number"}, {"name": "subSuite", "value": "TestCaseschange_number"}, {"name": "host", "value": "DESKTOP-BJ4LBJ8"}, {"name": "thread", "value": "7116-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.7.191.test_1change_number"}]}